openapi: 3.0.0
info:
  title: User API
  description: API for managing users
  version: 1.0.0
paths:
  /v1/users:
    get:
      summary: Gets all users
      description: Get all users, no params or auth required
      operationId: getAllUsers
      tags:
        - users
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
  /v1/users/{id}:
    get:
      summary: Gets user by ID
      description: Get user details by ID
      operationId: getUserById
      tags:
        - users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
        "404":
          description: User not found
    put:
      summary: Updates a user by ID
      description: Update user details by ID
      operationId: updateUser
      tags:
        - users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The user ID
      requestBody:
        description: Updated user object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
        "404":
          description: User not found
    delete:
      summary: Deletes a user by ID
      description: Delete user by ID
      operationId: deleteUser
      tags:
        - users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        "204":
          description: successful operation
        "401":
          description: Unauthorized
        "404":
          description: User not found
  /v1/auth/register:
    post:
      summary: Registers a new user
      description: Create a new user
      operationId: registerUser
      tags:
        - auth
      requestBody:
        description: New user object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid input
  /v1/auth/login:
    post:
      summary: Logs in a user
      description: Login a user
      operationId: loginUser
      tags:
        - auth
      requestBody:
        description: Login credentials
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
        "401":
          description: Invalid email or password
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        last_name:
          type: string
        email:
          type: string
        password:
          type: string
        phone_number:
          type: string
        address:
          type: string
        birth_date:
          type: string
          format: date
        role:
          type: string
      required:
        - name
        - last_name
        - email
        - password
        - phone_number
        - address
        - birth_date
        - role
